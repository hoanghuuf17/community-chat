{"version":3,"sources":["firebase.js","components/Header.js","features/appSlice.js","components/SideBarOption.js","components/SideBar.js","components/ChatInput.js","components/Message.js","components/Chat.js","image/logo.png","components/Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","Header","useAuthState","user","HeaderContainer","HeaderLeft","HeaderAvatar","onClick","signOut","alt","displayName","src","photoURL","HeaderSearch","placeholder","HeaderRight","styled","div","Avatar","appSlice","createSlice","name","initialState","roomId","reducers","enterRoom","state","action","payload","actions","selectRoomId","app","SideBarOption","Icon","title","addChannelOption","id","dispatch","useDispatch","SideBarOptionContainer","channelName","prompt","collection","add","fontSize","style","padding","SideBarOptionChanel","h3","SideBar","useCollection","channels","SideBarContainer","SideBarHeader","SideBarInfo","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","docs","map","doc","data","ChatInput","channelId","chatRef","useState","input","setInput","ChatInputContainer","value","onChange","e","target","Button","hidden","type","preventDefault","message","timestamp","FieldValue","serverTimestamp","userImage","current","scrollIntoView","behavior","block","inline","Message","MessageContainer","MessageInfo","Date","toDate","toUTCString","Chat","useRef","useSelector","useDocument","roomDetails","orderBy","roomMessage","loading","useEffect","ChatContainer","ChatMessage","ChatBottom","ref","Login","LoginContainer","LoginInnerContainer","logo","signInWithPopup","catch","error","alert","App","AppLoading","AppLoadingContents","fadeIn","className","AppBody","path","exact","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.19ab366b.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD0j5WygXN4AgdKpBnwyRHa3TE_nyTxZQ8\",\n    authDomain: \"slack-clone-93313.firebaseapp.com\",\n    projectId: \"slack-clone-93313\",\n    storageBucket: \"slack-clone-93313.appspot.com\",\n    messagingSenderId: \"194233717003\",\n    appId: \"1:194233717003:web:b8ae00890ca4d40eb7120e\"\n  };\n\n  const firebaseeApp = firebase.initializeApp(firebaseConfig);\n  const db =  firebaseeApp.firestore();\n  const auth = firebase.auth();\n  const provider =new firebase.auth.GoogleAuthProvider();\n\n  export { auth,provider ,db}\n\n\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Avatar } from '@material-ui/core';\n// import AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { auth } from '../firebase';\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\n\n \nfunction Header() {\n    const [user] = useAuthState(auth);\n     return (\n         <HeaderContainer>\n            {/* header left */}\n            <HeaderLeft>\n                <HeaderAvatar \n                    onClick={ () => auth.signOut()}\n                    alt={user?.displayName}\n                    src={user?.photoURL}\n                />\n                <ArrowLeftIcon/>\n                <p> Sign out</p>\n                {/* <AccessTimeIcon/>  */}\n            </HeaderLeft>\n            {/* header search  */}\n            <HeaderSearch>\n                <SearchIcon/>\n                <input placeholder='Search'/>\n            </HeaderSearch>\n\n\n            {/* header right */}\n            <HeaderRight>\n                <HelpOutlineIcon/>\n            </HeaderRight>\n         </HeaderContainer>\n     )\n }\n \n export default Header\n \nconst HeaderContainer = styled.div`\n    display : flex;\n    position: fixed;\n    width : 100%;\n    align-items : center;\n    justify-content : space-between;\n    padding : 10px 0;\n    background-color: var(--slack-color);\n    color : white;\n `;\n\nconst HeaderLeft = styled.div`\n    display : flex;\n    flex : 0.3;\n    align-items : center; \n    margin-left : 20px;\n    /* > .MuiSvgIcon-root {\n        margin-left : auto;\n        margin-right: 30px;\n    } */\n    >p{\n        font-size: 15px;\n        font-weight: 00\n    }\n`;\n\nconst HeaderAvatar = styled(Avatar)`\n    cursor : pointer;\n    :hover{\n        opacity : 0.8\n    }\n`;\n\nconst HeaderSearch = styled.div`\n    flex: 0.4;\n    opacity : 1;\n    border-radius : 6px; \n    background-color : #3c46e7;\n    text-align : center;\n    color: white;\n    display : flex;\n    padding : 0 50px;\n    border : 1px gray solid;\n    > input{\n        background-color : transparent;\n        border : none;\n        text-align : center;\n        min-width : 30vw;\n        outline : 0;\n        color : white;\n    }\n    >input::placeholder{\n        color :white;\n        font-weight: 600\n    }\n`;\n\nconst HeaderRight = styled.div`\n    flex : 0.3;\n    display :flex;\n    align-items : flex-end;\n    > .MuiSvgIcon-root {\n        margin-right: 20px;\n        margin-left: auto;\n    }\n`;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const appSlice = createSlice({\r\n  name: 'app',\r\n  initialState: {\r\n    roomId: null,\r\n  },\r\n  reducers: {\r\n    enterRoom: (state, action) => {\r\n        state.roomId = action.payload.roomId;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { enterRoom } = appSlice.actions;\r\n\r\nexport const selectRoomId = (state) => state.app.roomId;\r\n\r\nexport default appSlice.reducer;\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport { db } from '../firebase';\nimport {useDispatch} from 'react-redux';\nimport { enterRoom } from '../features/appSlice';\n\nfunction SideBarOption({Icon, title, addChannelOption, id}) {\n    const dispatch = useDispatch();\n\n    const addChannel = () =>{\n        const channelName = prompt('Please enter the channel name');\n        if(channelName){\n            db.collection('rooms').add({\n                name : channelName,\n            });\n        }\n    }\n\n    const selectChannel = () =>{\n        if(id){\n            dispatch(enterRoom({\n                roomId : id\n            }))\n        }\n    }\n\n    return (\n        <SideBarOptionContainer\n            onClick={addChannelOption ? addChannel : selectChannel}\n        >\n            { Icon && <Icon fontSize='small' style={{padding:10}}/>}\n            {Icon ? (\n                <h3>{title}</h3>\n            ):(\n                <SideBarOptionChanel>\n                    <span>#</span>{title}\n                </SideBarOptionChanel>\n            )}\n        </SideBarOptionContainer>\n    )\n}\n\nexport default SideBarOption\n\nconst SideBarOptionContainer = styled.div`\n    display : flex;\n    font-size :12px;\n    align-items :center;\n    padding-left : 2px;\n    cursor : pointer;\n    :hover{\n        opacity : 0.9;\n        background-color :  #3c46e7;\n    }\n\n    >h3{\n        font-weight : 500;\n    }\n\n    >h3 > span{\n        padding : 15px;\n    }\n`;\nconst SideBarOptionChanel = styled.h3`\n    paddding : 10xp 0;\n    font-weight :300;\n\n`;\n","import React from 'react'\nimport styled from 'styled-components';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport CreateIcon from '@material-ui/icons/Create';\nimport SideBarOption from './SideBarOption';\nimport InsertCommentIcon from '@material-ui/icons/InsertComment';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddIcon from '@material-ui/icons/Add';\nimport { db } from '../firebase';\nimport {useCollection } from 'react-firebase-hooks/firestore';\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { auth } from '../firebase';\n\n\nfunction SideBar() {\n    const [channels] = useCollection(db.collection('rooms'));\n    const [user] = useAuthState(auth);\n\n    return (\n        <SideBarContainer>\n            <SideBarHeader>\n                <SideBarInfo>\n                    <h2>Community</h2>\n                    <h3>\n                        <FiberManualRecordIcon/>\n                        {user?.displayName} \n                    </h3>\n                </SideBarInfo>\n                <CreateIcon />\n            </SideBarHeader>\n\n            <SideBarOption Icon={InsertCommentIcon} title =\"Threads\"/>\n            <SideBarOption Icon={InboxIcon} title =\"Mentions & reactions\"/>\n            <SideBarOption Icon={DraftsIcon} title =\"Saved items\"/>\n            <SideBarOption Icon={BookmarkBorderIcon} title =\"Channel brower\"/>\n            <SideBarOption Icon={PeopleAltIcon} title =\"People & user groups\"/>\n            <SideBarOption Icon={AppsIcon} title =\"Apps\"/>\n            <SideBarOption Icon={FileCopyIcon} title =\"File Brower\"/>\n            <SideBarOption Icon={ExpandLessIcon} title =\"Show Less\"/>\n            <hr/>\n            <SideBarOption Icon={ExpandMoreIcon} title =\"Channels \"/>\n            <hr/>\n            <SideBarOption Icon={AddIcon} addChannelOption title =\"Add channel\"/>\n\n            {channels?.docs.map(doc => (\n                <SideBarOption key={doc.id} id={doc.id} title ={doc.data().name}/>\n            ))}\n        </SideBarContainer>\n    )\n}\n\nexport default SideBar\n\nconst SideBarContainer = styled.div`\n    background-color  : var(--slack-color);\n    color : white;\n    flex : 0.3;\n    border-top : 1px solid #3c46e7;\n    max-width : 260px;\n    margin-top : 60px;\n\n    >hr{\n        margin-top : 10px;\n        margin-bottom: 10px;\n        border : 1px solid #3c46e7;\n    }\n`; \n\nconst SideBarHeader = styled.div`\n    display : flex;\n    border-bottom : 1px solid #3c46e7;  \n    padding : 13px;\n    > .MuiSvgIcon-root {\n        padding : 8px;\n        color : #3c46e7;  \n        font-size : 18px;\n        background-color : white;\n        border-radius : 999px;\n    }\n`;\n\nconst SideBarInfo = styled.div`\n    flex : 1;\n    >h2{\n        font-size :15px;\n        font-weight : 900;\n        margin-bottom : 5px;\n    }\n    >h3{\n        display : flex;\n        font-size : 13px;\n        font-weight  : 400;\n        align-items : center;\n    }\n    >h3 > .MuiSvgIcon-root {\n            font-size : 14px;\n            color : green;\n            margin-top : 1px;\n            margin-right: 2px\n    }\n`;\n\n\n","import { Button } from '@material-ui/core';\nimport React,{useState} from 'react'\nimport styled from 'styled-components';\nimport { db } from '../firebase';\nimport firebase from 'firebase';\n\nfunction ChatInput({channelName, channelId,chatRef,user}) {\n    const [input, setInput] = useState('')\n\n    const sendMessage = (e) => {\n\n        e.preventDefault();\n        if(!channelId){\n             return false;\n        }\n        db.collection(\"rooms\").doc(channelId).collection(\"messages\").add({\n            message : input,\n            timestamp : firebase.firestore.FieldValue.serverTimestamp(),\n            user: user.displayName,\n            userImage : user.photoURL,\n\n        }) \n        chatRef.current.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"nearest\",\n            inline: \"start\"\n          });\n        setInput('');\n     }\n\n    return (\n        <ChatInputContainer>\n            <form>\n                <input \n                    value={input} \n                    onChange={e=> setInput(e.target.value)} \n                    placeholder={`Message #${channelName}`}\n                />\n                <Button hidden type=\"submit\" onClick={sendMessage}>\n                    SEND\n                </Button>\n            </form>\n        </ChatInputContainer>\n    )\n}\n\nexport default ChatInput\n\nconst ChatInputContainer = styled.div`\n    border-radius : 20px;\n    >form {\n        position : relative;\n        display : flex;\n        justify-content : center;\n    }\n    >form >input{\n        position : fixed;\n        bottom : 30px;\n        width: 60%;\n        border : 1px solid gray;\n        border-radius : 3px;\n        outline : none ;\n        padding : 20px;\n    }\n    >form >button{\n        display : none !important;\n    }\n`;","import React from 'react'\nimport styled from 'styled-components';\n\n\nfunction Message({message, timestamp, user, userImage}) {\n    return (\n        <MessageContainer>\n            <img src={userImage} alt=\"user image\"/>\n            <MessageInfo>\n                <h4>\n                    {user}{' : '} <span>{new Date(timestamp?.toDate()).toUTCString()}</span>\n                </h4>\n                <p>{message}</p>\n            </MessageInfo>\n        </MessageContainer>\n    )\n}\n\nexport default Message\n\nconst MessageContainer = styled.div`\n    display : flex;\n    align-items : center;\n    padding : 20px;\n    >img{\n        height : 40px;\n        border-radius: 8px;\n    }\n`;\n\nconst MessageInfo = styled.div`\n    padding-left : 10px;\n\n    >h4>span{\n        color : gray;\n        font-weight :300;\n        align-items : center;\n        font-size : 10px;\n    }\n`;","import React, { useEffect, useRef } from 'react'\nimport styled from 'styled-components';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport InfoOutlineIcon from '@material-ui/icons/InfoOutlined';\nimport {useSelector} from 'react-redux';\nimport { selectRoomId } from '../features/appSlice';\nimport ChatInput from './ChatInput';\nimport {useCollection,useDocument} from 'react-firebase-hooks/firestore';\nimport { db } from '../firebase';\nimport Message from './Message';\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { auth } from '../firebase';\n\nfunction Chat() {\n    const [user] = useAuthState(auth);\n    const chatRef = useRef(null)\n\n    const roomId = useSelector(selectRoomId)\n    const [roomDetails] = useDocument(\n        roomId && db.collection('rooms').doc(roomId)\n    );\n\n    const [roomMessage, loading] = useCollection(\n        roomId && db.collection('rooms').doc(roomId).collection('messages').orderBy('timestamp', \"asc\")\n    );\n\n    useEffect(() => {\n        chatRef?.current?.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"nearest\",\n            inline: \"start\"\n          });\n    },[roomId, loading]); \n\n    return (\n        <ChatContainer>\n            {roomDetails && roomMessage && (\n                <>\n                    <Header>\n                        <HeaderLeft>\n                            <h4><strong>#{roomDetails?.data().name}</strong></h4>\n                            <StarBorderIcon/>\n                        </HeaderLeft>\n\n                        <HeaderRight>\n                            <p>\n                                <InfoOutlineIcon/> Details\n                            </p>\n                        </HeaderRight>\n                    </Header>\n                    <ChatMessage>\n                        {roomMessage?.docs.map(doc=> {\n                            const {message, timestamp, user, userImage} = doc.data();\n\n                            return(\n                                <Message\n                                    key={doc.id}\n                                    message={message}\n                                    timestamp={timestamp}\n                                    user={user}\n                                    userImage={userImage}\n                                />\n                            )\n                        })}\n                        <ChatBottom ref={chatRef}/>\n                    </ChatMessage>\n\n                    <ChatInput\n                        user={user}\n                        chatRef={chatRef}\n                        channelName={roomDetails?.data().name}\n                        channelId={roomId}\n                    />\n                </>\n            )}\n        </ChatContainer>\n    )\n}\n\nexport default Chat\nconst ChatBottom = styled.div`\n    padding-bottom : 100px\n`;\n\nconst ChatMessage = styled.div`\n\n`;\n\nconst ChatContainer = styled.div`\n    flex : 0.7;\n    flex-grow : 1;\n    overflow-y : scroll;\n    margin-top  : 60px\n`;\n\nconst Header = styled.div`\n    display : flex;\n    justify-content : space-between;\n    padding : 20px;\n    border-bottom: 1px solid lightgray;\n`;  \n\nconst HeaderLeft = styled.div`\n    display : flex;\n    align-items : center;\n    >h4{\n        display : flex;\n        text-transform : lowercase;\n        margin-right : 10px;\n    }\n    >h4> .MuiSvgIcon-root{\n        margin-left:20px;\n        font-size: 18px;\n    }\n\n`;\n\nconst HeaderRight = styled.div`\n    display : flex;\n    >p{\n        display : flex;\n        align-items : center;\n        font-size  :14px;\n    }\n    >p> .MuiSvgIcon-root{\n        margin-right : 5px;\n        font-size: 16px\n    }\n\n\n`;","export default __webpack_public_path__ + \"static/media/logo.e937cf71.png\";","import React from 'react'\nimport styled from 'styled-components';\nimport logo from '../image/logo.png';\nimport {Button} from '@material-ui/core';\nimport { auth, provider } from '../firebase';\n\nfunction Login() {\n    const signIn = e => {\n        e.preventDefault();\n        auth.signInWithPopup(provider).catch((error)=> alert(error.message));\n    }\n\n    return (\n        <LoginContainer>\n            <LoginInnerContainer>\n                <img src={logo} alt=\"login\"/>\n                <h1> Sign in with us </h1>\n                <Button onClick={signIn}>Sign in with Google</Button>\n            </LoginInnerContainer>\n        </LoginContainer>\n    )\n}\n\nexport default Login\n\nconst LoginContainer = styled.div`\n    background-color: #f8f8f8;\n    height: 100vh;\n    display: grid;\n    place-items: center;\n`;\n\nconst LoginInnerContainer = styled.div`\n    padding: 100px;\n    text-align: center;\n    background-color: white;\n    border-radius: 10px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n    >img{\n        object-fit:contain;\n        height: 300px;\n        margin-bottom: 40px;\n    }\n\n    >button{\n        margin-top: 50px;\n        text-transform: inherit !important;\n        background-color : #0a8d48;\n        color : white;\n    }\n`;\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport SideBar from './components/SideBar';\r\nimport styled from 'styled-components';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  // Link \r\n} from \"react-router-dom\";\r\nimport Chat from './components/Chat';\r\nimport { useAuthState } from 'react-firebase-hooks/auth'\r\nimport { auth } from './firebase';\r\nimport Login from './components/Login';\r\nimport Spinner from 'react-spinkit';\r\n\r\nfunction App() {\r\n  const [user, loading] = useAuthState(auth);\r\n\r\n  if(loading){\r\n    return(\r\n      <AppLoading>\r\n          <AppLoadingContents>\r\n            <h1>Ckờ mộc ckúc!...</h1>\r\n              <Spinner\r\n                name=\"pacman\"\r\n                fadeIn=\"none\"\r\n              />\r\n          </AppLoadingContents>\r\n      </AppLoading>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n      {!user ? (\r\n        <Login/>\r\n      ):\r\n      <>\r\n        <Header/> \r\n        <AppBody>\r\n          <SideBar/>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Chat/>\r\n            </Route>\r\n          </Switch>\r\n        </AppBody>\r\n      </>\r\n      } \r\n    </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst AppBody = styled.div`\r\n    display: flex;\r\n    height : 100vh; \r\n`;\r\nconst AppLoading = styled.div`\r\n  display: grid;\r\n  place-items: center;\r\n  height: 100vh;\r\n  width: 100%;\r\n`;\r\n\r\nconst AppLoadingContents = styled.div`\r\n  padding-top: 100px;\r\n  text-align : center;\r\n  padding-bottom: 100px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport appReducer from '../features/appSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    app: appReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}